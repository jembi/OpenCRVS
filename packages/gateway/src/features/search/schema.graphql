# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# OpenCRVS is also distributed under the terms of the Civil Registration
# & Healthcare Disclaimer located at http://opencrvs.org/license.
#
# Copyright (C) The OpenCRVS Authors. OpenCRVS and the OpenCRVS
# graphic logo are (registered/a) trademark(s) of Plan International.
type EventSearchResultSet {
  results: [EventSearchSet]
  totalItems: Int
}

interface EventSearchSet {
  id: ID!
  type: String
  registration: RegistrationSearchSet
}

type RegistrationSearchSet {
  status: String
  contactNumber: String
  contactRelationship: String
  dateOfDeclaration: Date
  trackingId: String
  registrationNumber: String
  eventLocationId: String
  registeredLocationId: String
  reason: String
  comment: String
  duplicates: [ID]
  createdAt: String
  modifiedAt: String
}

type BirthEventSearchSet implements EventSearchSet {
  id: ID!
  type: String
  childName: [HumanName]
  dateOfBirth: Date
  registration: RegistrationSearchSet
}

type DeathEventSearchSet implements EventSearchSet {
  id: ID!
  type: String
  deceasedName: [HumanName]
  dateOfDeath: Date
  registration: RegistrationSearchSet
}

type EventProgressResultSet {
  results: [EventProgressSet]
  totalItems: Int
}

type EventProgressData {
  timeInProgress: Int
  timeInReadyForReview: Int
  timeInRequiresUpdates: Int
  timeInWaitingForApproval: Int
  timeInWaitingForBRIS: Int
  timeInReadyToPrint: Int
}

type EventProgressSet {
  id: ID!
  type: String
  name: [HumanName]
  dateOfEvent: Date
  registration: RegistrationSearchSet
  startedBy: User
  startedByFacility: String
  startedAt: Date
  progressReport: EventProgressData
}

type Query {
  searchEvents(
    userId: String
    locationIds: [String]
    status: [String]
    type: [String]
    trackingId: String
    registrationNumber: String
    contactNumber: String
    name: String
    count: Int
    skip: Int
    sort: String
    sortColumn: String
  ): EventSearchResultSet
  getEventsWithProgress(
    locationId: String
    count: Int
    skip: Int
    sort: String
    status: [String]
    type: [String]
  ): EventProgressResultSet
}
