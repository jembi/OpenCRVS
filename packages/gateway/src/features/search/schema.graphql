# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# OpenCRVS is also distributed under the terms of the Civil Registration
# & Healthcare Disclaimer located at http://opencrvs.org/license.
#
# Copyright (C) The OpenCRVS Authors. OpenCRVS and the OpenCRVS
# graphic logo are (registered/a) trademark(s) of Plan International.
type EventSearchResultSet {
  results: [EventSearchSet]
  totalItems: Int
}

type AssignmentData {
  userId: String
  firstName: String
  lastName: String
  officeName: String
}

interface EventSearchSet {
  id: ID!
  type: String
  registration: RegistrationSearchSet
  operationHistories: [OperationHistorySearchSet]
}

type RegistrationSearchSet {
  status: String
  contactNumber: String
  contactRelationship: String
  dateOfDeclaration: Date
  trackingId: String
  registrationNumber: String
  eventLocationId: String
  registeredLocationId: String
  reason: String
  comment: String
  duplicates: [ID]
  createdAt: String
  modifiedAt: String
  assignment: AssignmentData
}

type OperationHistorySearchSet {
  operationType: String
  operatedOn: Date
  operatorRole: String
  operatorName: [HumanName]
  operatorOfficeName: String
  operatorOfficeAlias: [String]
  notificationFacilityName: String
  notificationFacilityAlias: [String]
  rejectReason: String
  rejectComment: String
}

type BirthEventSearchSet implements EventSearchSet {
  id: ID!
  type: String
  childName: [HumanName]
  dateOfBirth: Date
  registration: RegistrationSearchSet
  operationHistories: [OperationHistorySearchSet]
}

type DeathEventSearchSet implements EventSearchSet {
  id: ID!
  type: String
  deceasedName: [HumanName]
  dateOfDeath: Date
  registration: RegistrationSearchSet
  operationHistories: [OperationHistorySearchSet]
}

type EventProgressResultSet {
  results: [EventProgressSet]
  totalItems: Int
}

type EventProgressData {
  timeInProgress: Int
  timeInReadyForReview: Int
  timeInRequiresUpdates: Int
  timeInWaitingForApproval: Int
  timeInWaitingForBRIS: Int
  timeInReadyToPrint: Int
}

type EventProgressSet {
  id: ID!
  type: String
  name: [HumanName]
  dateOfEvent: Date
  registration: RegistrationSearchSet
  startedBy: User
  startedByFacility: String
  startedAt: Date
  progressReport: EventProgressData
}

type Query {
  searchEvents(
    userId: String
    locationIds: [String!]
    status: [String]
    type: [String]
    trackingId: String
    nationalId: String
    registrationNumber: String
    contactNumber: String
    name: String
    count: Int
    skip: Int
    sort: String
    sortColumn: String
  ): EventSearchResultSet
  getEventsWithProgress(
    locationId: String
    count: Int
    skip: Int
    sort: String
    status: [String]
    type: [String]
  ): EventProgressResultSet
  searchRecord(
    event: String
    dateOfEvent: String
    registrationStatuses: String
    eventLocationId: String
    childFirstName: String
    childLastName: String
    childDoB: String
    deceasedFirstNames: String
    deceasedFamilyName: String
    deathDate: String
    deathDateStart: String
    deathDateEnd: String
    motherFirstNames: String
    motherFamilyName: String
    motherDoB: String
    motherIdentifier: String
    fatherFirstNames: String
    fatherFamilyName: String
    fatherDoB: String
    fatherIdentifier: String
    informantFirstNames: String
    informantFamilyName: String
    contactNumber: String
    registrationNumber: String
    trackingId: String
    dateOfRegistration: String
    dateOfRegistrationStart: String
    dateOfRegistrationEnd: String
    declarationLocationId: String
    declarationJurisdictionId: String
    eventLocationLevel1: String
    eventLocationLevel2: String
    eventLocationLevel3: String
    eventLocationLevel4: String
    eventLocationLevel5: String
    childDoBStart: String
    childDoBEnd: String
    childGender: String
    deceasedGender: String
    deceasedDoB: String
    deceasedDoBStart: String
    deceasedDoBEnd: String
    motherDoBStart: String
    motherDoBEnd: String
    fatherDoBStart: String
    fatherDoBEnd: String
    informantDoB: String
    informantDoBStart: String
    informantDoBEnd: String
  ): EventProgressResultSet
}
