{
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "husky": {
    "hooks": {
      "pre-commit": "lerna run --parallel precommit"
    }
  },
  "scripts": {
    "postinstall": "patch-package",
    "start": "lerna run build --scope @opencrvs/components && lerna run --parallel --ignore e2e --ignore @opencrvs/integration $OTHER_LERNA_FLAGS start",
    "start:prod": "yarn build && lerna run --parallel --ignore e2e --ignore @opencrvs/integration $OTHER_LERNA_FLAGS start:prod",
    "dev": "yarn dev:secrets:gen && concurrently \"yarn run start\" \"yarn run compose:deps\"",
    "dev:secrets:gen": "openssl genrsa -out .secrets/private-key.pem 2048 && openssl rsa -pubout -in .secrets/private-key.pem -out .secrets/public-key.pem",
    "dev:tmux": "tmuxinator start",
    "dev:tmux:kill": "tmux kill-session -t opencrvs",
    "open": "opener 'http://localhost:6060/' && opener 'http://localhost:3020/'",
    "test": "CI=true lerna run test --silent --noStackTrace --stream --watchAll=false",
    "compose:deps": "docker-compose -p opencrvs -f docker-compose.deps.yml -f docker-compose.dev-deps.yml up",
    "compose:all": "yarn build:image && docker-compose -p opencrvs -f docker-compose.yml -f docker-compose.deps.yml -f docker-compose.dev-deps.yml -f docker-compose.dev.yml up",
    "compose:down:deps": "docker-compose -p opencrvs -f docker-compose.deps.yml -f docker-compose.dev-deps.yml down",
    "compose:down:all": "docker-compose -p opencrvs -f docker-compose.yml -f docker-compose.deps.yml -f docker-compose.dev-deps.yml down",
    "compose:build": "yarn build:image && docker-compose build",
    "compose:push": "yarn compose:build && docker-compose push && yarn compose:push:version",
    "compose:push:version": "export VERSION=`git log -1 --pretty=format:%h` && yarn compose:build && docker-compose push && unset VERSION",
    "compose:push:release": "export VERSION=`git describe --tags --abbrev=0` && git checkout -b release-`git describe --tags --abbrev=0` && yarn compose:build && docker-compose push && unset VERSION",
    "deploy": "bash deploy.sh",
    "deploy:staging": "bash deploy.sh --clear-data=no --restore-metadata=yes opencrvs-staging.jembi.org latest",
    "deploy:qa": "bash deploy.sh --clear-data=yes --restore-metadata=yes opencrvs.qa1.jembi.org",
    "deploy:bn-prod": "SSH_USER=mishealth SSH_HOST=172.16.17.54 LOG_LOCATION=/home/mishealth bash deploy.sh --clear-data=no --restore-metadata=yes opencrvsbd.org",
    "db:backup:create": "DEV=true ./infrastructure/backup-metadata.sh",
    "db:backup:restore": "DEV=true ./infrastructure/restore-metadata.sh",
    "db:clear:all": "DEV=true ./infrastructure/clear-all-data.sh",
    "cy:open": "yarn db:clear:all && yarn db:backup:restore && cd packages/e2e && yarn open",
    "cy:run": "yarn db:clear:all && yarn db:backup:restore && cd packages/e2e && CYPRESS_LOGIN_URL=http://localhost:3020/ CYPRESS_REGISTER_URL=http://localhost:3000/ CYPRESS_AUTH_URL=http://localhost:4040/ yarn start",
    "cov:register": "cd packages/register && yarn open:cov",
    "cov:login": "cd packages/login && yarn open:cov",
    "cov:performance": "cd packages/performance && yarn open:cov",
    "cy": "cd packages/e2e && yarn open",
    "build": "lerna run build",
    "build:image": "docker build -t opencrvs-build .",
    "build:clean": "lerna run build:clean"
  },
  "devDependencies": {
    "@types/dotenv": "^6.1.0",
    "concurrently": "^3.5.1",
    "husky": "1.0.0-rc.13",
    "lerna": "^2.11.0",
    "lint-staged": "^7.1.0",
    "prettier": "^1.15.2"
  },
  "dependencies": {
    "opener": "^1.5.1",
    "patch-package": "^6.1.2",
    "postinstall-postinstall": "^2.0.0"
  }
}
